{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n   slug: {\n      type: \"string\",\n      resolve: (doc) => `${doc._raw.flattenedPath}`,\n   },\n   slugAsParams: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n   },\n   structuredData: {\n      type: \"json\",\n      resolve: (doc) => ({\n         \"@context\": \"https://schema.org\",\n         \"@type\": \"BlogPosting\",\n         headline: doc.title,\n         datePublished: doc.publishedAt,\n         dateModified: doc.publishedAt,\n         description: doc.summary,\n         image: doc.image ? `${doc.image}` : `/api/og?title=${doc.title}`,\n         url: `https://davidilie.com/blog/${doc._raw.flattenedPath}`,\n         author: {\n            \"@type\": \"Person\",\n            name: \"David Ilie\",\n         },\n      }),\n   },\n};\n\nexport const Blog = defineDocumentType(() => ({\n   name: \"Blog\",\n   filePathPattern: `**/*.mdx`,\n   contentType: \"mdx\",\n   fields: {\n      title: {\n         type: \"string\",\n         required: true,\n      },\n      publishedAt: {\n         type: \"string\",\n         required: true,\n      },\n      summary: {\n         type: \"string\",\n         required: true,\n      },\n      image: {\n         type: \"string\",\n      },\n      tags: {\n         type: \"list\",\n         of: { type: \"string\" },\n         required: true,\n      },\n   },\n   //@ts-ignore\n   computedFields,\n}));\n\nexport default makeSource({\n   contentDirPath: \"./content\",\n   documentTypes: [Blog],\n   mdx: {\n      remarkPlugins: [remarkGfm],\n      rehypePlugins: [\n         rehypeSlug,\n         [\n            rehypePrettyCode,\n            {\n               theme: \"one-dark-pro\",\n               onVisitLine(node) {\n                  if (node.children.length === 0) {\n                     node.children = [{ type: \"text\", value: \" \" }];\n                  }\n               },\n               onVisitHighlightedLine(node) {\n                  node.properties.className.push(\"line--highlighted\");\n               },\n               onVisitHighlightedWord(node) {\n                  node.properties.className = [\"word--highlighted\"];\n               },\n            },\n         ],\n         [\n            rehypeAutolinkHeadings,\n            {\n               properties: {\n                  className: [\"anchor\"],\n               },\n            },\n         ],\n      ],\n   },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAGtB,IAAM,iBAAiB;AAAA,EACpB,MAAM;AAAA,IACH,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,GAAG,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACX,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACxE;AAAA,EACA,gBAAgB;AAAA,IACb,MAAM;AAAA,IACN,SAAS,CAAC,SAAS;AAAA,MAChB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,UAAU,IAAI;AAAA,MACd,eAAe,IAAI;AAAA,MACnB,cAAc,IAAI;AAAA,MAClB,aAAa,IAAI;AAAA,MACjB,OAAO,IAAI,QAAQ,GAAG,IAAI,KAAK,KAAK,iBAAiB,IAAI,KAAK;AAAA,MAC9D,KAAK,8BAA8B,IAAI,KAAK,aAAa;AAAA,MACzD,QAAQ;AAAA,QACL,SAAS;AAAA,QACT,MAAM;AAAA,MACT;AAAA,IACH;AAAA,EACH;AACH;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACL,OAAO;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACb;AAAA,IACA,aAAa;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACb;AAAA,IACA,OAAO;AAAA,MACJ,MAAM;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACH,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACb;AAAA,EACH;AAAA;AAAA,EAEA;AACH,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACvB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACF,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACZ;AAAA,MACA;AAAA,QACG;AAAA,QACA;AAAA,UACG,OAAO;AAAA,UACP,YAAY,MAAM;AACf,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC7B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAChD;AAAA,UACH;AAAA,UACA,uBAAuB,MAAM;AAC1B,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACrD;AAAA,UACA,uBAAuB,MAAM;AAC1B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACnD;AAAA,QACH;AAAA,MACH;AAAA,MACA;AAAA,QACG;AAAA,QACA;AAAA,UACG,YAAY;AAAA,YACT,WAAW,CAAC,QAAQ;AAAA,UACvB;AAAA,QACH;AAAA,MACH;AAAA,IACH;AAAA,EACH;AACH,CAAC;",
  "names": []
}
